/**
 * @copyright   2010-2015, The Titon Project
 * @license     http://opensource.org/licenses/BSD-3-Clause
 * @link        http://titon.io
 */

@include export("flex") {
    $toolkit-temp-flex-modifiers: map-get($toolkit-flex, "modifiers");
    $toolkit-temp-flex-width: map-get($toolkit-flex, "width");
    $toolkit-temp-flex-grid-gutter: map-get($toolkit-flex, "grid-gutter");

    #{map-get($toolkit-flex, "class-region")} {
        @include flex-region($toolkit-temp-flex-width);

        // Alignment
        &.flow-top,
        &.flow-left { @include flex-region-align(left); }
        &.flow-bottom,
        &.flow-right { @include flex-region-align(right); }
        &.flow-center { @include flex-region-align(center); }
        &.flow-between { @include flex-region-align(between); }
        &.flow-around { @include flex-region-align(around); }

        // Support RTL
        @if (setting("text-direction") == rtl) {
            writing-mode: vertical-rl;
        }
    }

    #{map-get($toolkit-flex, "class-block")} {
        @include flex-block;
        @include flex-block-order;

        // Override parent alignment
        &.self-top,
        &.self-left { @include flex-block-align(top); }
        &.self-bottom,
        &.self-right { @include flex-block-align(bottom); }
        &.self-center { @include flex-block-align(center); }
        &.self-baseline { @include flex-block-align(baseline); }
        &.self-stretch { @include flex-block-align(stretch); }

        // Resizing
        &.grow { flex-grow: 1; }
        &.no-grow { flex-grow: 0; }
        &.shrink { flex-shrink: 1; }
        &.no-shrink { flex-shrink: 0; }
    }

    // Global ordering
    @for $i from 1 through map-get($toolkit-flex, "order-count") {
        .order-#{$i} {
            @include flex-block-order($i);
        }
    }

    // Responsive sizes
    @each $size, $options in map-get($toolkit-flex, "sizes") {
        $size-columns: nth($options, 1);

        @include in-range( (nth($options, 2), nth($options, 3)) ) {
            @for $i from 1 through $size-columns {
                #{map-get($toolkit-flex, "class-block")}.#{$size}-#{$i} {
                    flex-basis: flex-span($i, $size-columns, $toolkit-temp-flex-width, map-get($toolkit-flex, "gutter"));
                }
            }

            // Responsive ordering
            @for $i from 1 through map-get($toolkit-flex, "order-count") {
                .#{$size}-order-#{$i} {
                    @include flex-block-order($i);
                }
            }
        }
    }

    //-------------------- Modifiers --------------------//

    // Generate a grid of blocks with equal spacing between
    @if (is-feature-enabled("all-modifiers") or index($toolkit-temp-flex-modifiers, "grid")) {
        #{map-get($toolkit-flex, "class-modifier-grid")} {
            flex-flow: row wrap;
            justify-content: flex-start;
            align-content: flex-start;
            max-width: none;

            @if $toolkit-temp-flex-grid-gutter {
                margin-top: -$toolkit-temp-flex-grid-gutter;
                margin-left: -$toolkit-temp-flex-grid-gutter;

                > #{map-get($toolkit-flex, "class-block")} {
                    margin-top: $toolkit-temp-flex-grid-gutter;
                    margin-left: $toolkit-temp-flex-grid-gutter;
                }
            }
        }
    }

    // Display blocks vertically or horizontally regardless of orientation
    @if (is-feature-enabled("all-modifiers") or index($toolkit-temp-flex-modifiers, "horizontal")) {
        #{map-get($toolkit-flex, "class-modifier-horizontal")} {
            @include flex-region-orientation(horizontal);
        }
    }

    @if (is-feature-enabled("all-modifiers") or index($toolkit-temp-flex-modifiers, "vertical")) {
        #{map-get($toolkit-flex, "class-modifier-vertical")} {
            @include flex-region-orientation(vertical);
        }
    }

    // Wrap blocks onto the next line instead of trying to squish into 1 line
    @if (is-feature-enabled("all-modifiers") or index($toolkit-temp-flex-modifiers, "wrap")) {
        #{map-get($toolkit-flex, "class-modifier-wrap")} {
            @include flex-region-wrap;
        }
    }
}
